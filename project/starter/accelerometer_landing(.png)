CREATE EXTERNAL TABLE IF NOT EXISTS `francisco`.`accelerometer_landing1` (
  `timeStamp` string,
  `user` bigint,
  `x` float,
  `y` float,
  `z` float
)
ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'
WITH SERDEPROPERTIES (
  'ignore.malformed.json' = 'FALSE',
  'dots.in.keys' = 'FALSE',
  'case.insensitive' = 'TRUE',
  'mapping' = 'TRUE'
)
STORED AS INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION 's3://cd0030bucket/accelerometer/'
TBLPROPERTIES ('classification' = 'json');


accelerometer_landing_to_trusted.py


customer_df = glueContext.create_dynamic_frame.from_catalog(
    database="your_database", table_name="customer_trusted"
)

accel_df = glueContext.create_dynamic_frame.from_options(
    connection_type="s3",
    format="json",
    connection_options={"paths": ["s3://your-bucket/accelerometer_landing/"], "recurse": True}
)


joined_df = accel_df.join(
    paths1=["user"],
    frame2=customer_df,
    paths2=["email"]
)


projected_df = joined_df.drop_fields(["timeStamp", "user", x"", ...])


glueContext.write_dynamic_frame.from_options(
    frame=projected_df,
    connection_type="s3",
    format="json",
    connection_options={"path": "s3://your-bucket/accelerometer_trusted/"}
)
